/* 
 * Copyright (C) ArcCore AB <contact@arccore.com>
 *
 * CM3 startup variables: 
 * _sidata - Start of .data in flash 
 * _sdata  - start address of .data in RAM
 * _edata  - end address of .data  in RAM
 * _sbss   - start address of .bss
 * _ebss   - end address of .bss
 * _etext  - ?
 */

OUTPUT_FORMAT("elf32-littlearm", "elf32-bigarm","elf32-littlearm")
OUTPUT_ARCH(arm)
ENTRY(Reset_Handler)

MEMORY
{
#if defined(CFG_BRD_JACINTO) || defined(CFG_BRD_JAC6) || defined(CFG_BRD_JAC6_VAYU_EVM) 
#include "memory.ldf"
#else
#include "memory_mcu.ldf"
#endif
}

#if defined(CFG_BRD_JACINTO) || defined(CFG_BRD_JAC6) || defined(CFG_BRD_JAC6_VAYU_EVM)
#define L_FLASH_CODE_0	code_ram
#define L_SRAM_0		ram	
#endif


SECTIONS
{
#if defined(CFG_BRD_JACINTO) || defined(CFG_BRD_JAC6) || defined(CFG_BRD_JAC6_VAYU_EVM)
    .text.vecbase :
    {
        . = ALIGN(4);
        KEEP(*(.vecbase))
        *(.text.Default_Reset_Handler)       
        . = ALIGN(4);
    } > boot
    .isr_vector :
    {
        . = ALIGN(4);
        KEEP(*(.isr_vector))
        *(.text.Reset_Handler)
        . = ALIGN(4);
    } > boot_c0
    
#if defined(CFG_BRD_JAC6_VAYU_EVM)
    .resource_table ALIGN(0x3000): { KEEP(*(.resource_table)) } > L_FLASH_CODE_0
#endif
    
#else
    .isr_vector :
    {
        . = ALIGN(4);
        KEEP(*(.isr_vector))
        . = ALIGN(4);
    } > L_FLASH_CODE_0
#endif

    .text :
	{
        . = ALIGN(4);
		*(.ti_sdo_ipc_init);
		*(.data_ti_ipc_namesrv_NameServerRemoteRpmsg_Module__state__V);
		*(.data_ti_sdo_ipc_SharedRegion_Module__state__V);
		*(.data_ti_sdo_ipc_Ipc_Module__state__V);
		*(.data_ti_sdo_ipc_Notify_Module__state__V);
		*(.data_ti_sdo_ipc_family_vayu_arc_NotifyDriverMbx_Module__state__V);
		*(.data_ti_sdo_ipc_heaps_HeapMemMP_Module__state__V);
		*(.data_ti_ipc_remoteproc_Resource_Module__state__V);
		*(.data_ti_ipc_transports_TransportRpmsgSetup_Module__state__V);
		*(.data_ti_sdo_ipc_MessageQ_Module__state__V);
		*(.data_ti_sdo_ipc_family_vayu_arc_InterruptIpu_Module__state__V);
		*(.data_ti_sdo_ipc_family_vayu_arc_NotifySetup_Module__state__V);
		*(.data_ti_sdo_utils_MultiProc_Module__state__V);
		*(.data_ti_sdo_utils_NameServer_Module__state__V);
		*(.data_xdc_runtime_Startup_Module__state__V);
		*(.data_xdc_runtime_System_Module__state__V);
		*(.data_ti_sdo_ipc_GateMP_Module__state__V);
        
    	*(.text .text.* );
    	*(.glue_7)		/* IMPROVEMENT */
    	*(.glue_7t)     /* IMPROVEMENT */
    	
    	/* ST/ARM special variable to initialize .data */
	    . = ALIGN(4);
    	_etext = .;
	} > L_FLASH_CODE_0
	.T1_code :	{ 
	    . = ALIGN(4);
    	*(.T1_code .T1_code.* );
    	*(.T1_codeFast .T1_codeFast.* );
	} > L_FLASH_CODE_0

	/* Relocatable Flash Driver */
	.fls_rom : {
    	__FLS_ERASE_ROM__ = .;
    	*(.fls_erase);
    	__FLS_WRITE_ROM__ = .;
    	*(.fls_write);
    	__FLS_END_ROM__ = .;
	} > L_FLASH_CODE_0

    /* ARM exception section */
    .ARM.exidx   : { 
        *(.ARM.exidx* .gnu.linkonce.armexidx.*)
	} > L_FLASH_CODE_0
	
    __exidx_start = .;

	/* Read-only data section. */
	.rodata :	{ 
	    . = ALIGN(4);
		*(.rodata .rodata.* .gnu.linkonce.r.*)
	    . = ALIGN(4);
		*(.T1_const .T1_const.*)
	    . = ALIGN(4);
		_sidata = ALIGN(.,4);
	} > L_FLASH_CODE_0

	.data :	AT ( _sidata )
	{
	    . = ALIGN(4);
		_sdata = .; 
		*(.data .data.* .gnu.linkonce.d.* .gnu.linkonce.r.* .eh_frame)
	    . = ALIGN(4);
		_edata = .;		
	} > L_SRAM_0

#if defined(CFG_BRD_JAC6_VAYU_EVM)
	.t32_outport 0x82000000 (NOLOAD): { *(.t32_outport); }
#endif
	.bss : {
	    . = ALIGN(4);
		_sbss = ., 
		*(.bss .bss.* COMMON .gnu.linkonce.b.*);
		*(.T1_bss .T1_bss.*);
		*(.T1_traceBuffer .T1_traceBuffer.*);
	    . = ALIGN(4);
		_ebss = .; 
	} 	> L_SRAM_0
	
	.init_stack ALIGN(16) (NOLOAD) : 
	{	
		. = . + 400; 	
		_estack	= .; 
	} > L_SRAM_0

	.msp_stack ALIGN(16) (NOLOAD) : 
	{	
	    _smspstack	= .;
		. = . + 4096; 	
		_emspstack	= .; 
	} > L_SRAM_0

	
	/* Fls RAM section */
	.fls_ram ALIGN(16) (NOLOAD) : {
		__FLS_ERASE_RAM__ = .;
		. = . + SIZEOF(.fls_rom);
	} > L_SRAM_0

  .ctors :
  {
    KEEP (*(SORT(.ctors.*)))
  }

	.uninit ALIGN(0x10) (NOLOAD) : { *(.winidea_port .ramlog .dem_eventmemory_pri) ; } > L_SRAM_0

	__FLS_SIZE__ = SIZEOF(.fls_rom);
	__FLS_WRITE_RAM__ =  __FLS_ERASE_RAM__ + (__FLS_WRITE_ROM__ - __FLS_ERASE_ROM__);
}
__EXCEPT_START__	= 0x0;
__EXCEPT_END__		= 0x0;

























